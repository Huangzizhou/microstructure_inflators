# Include Eigen
IF (DEFINED ENV{EIGEN_INC})
    SET(EIGEN_BASE $ENV{EIGEN_INC}/eigen3)
ELSE (DEFINED ENV{EIGEN_INC})
    SET(EIGEN_BASE "/opt/local/include/eigen3")
ENDIF (DEFINED ENV{EIGEN_INC})
INCLUDE_DIRECTORIES("/opt/local/include")
INCLUDE_DIRECTORIES(${EIGEN_BASE})
INCLUDE_DIRECTORIES(${EIGEN_BASE}/unsupported)
ADD_DEFINITIONS(-DEIGEN_YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET)


FILE(GLOB_RECURSE SRC_FILES *.cpp *.c)
FILE(GLOB_RECURSE INC_FILES *.h *.hpp)

ADD_LIBRARY(WireInflator2D SHARED ${SRC_FILES} ${INC_FILES})
ADD_EXECUTABLE(random_gen main.cpp)
TARGET_LINK_LIBRARIES(random_gen WireInflator2D)


# Add swig interface files
SET(SWG_FILES PyWireInflator2D.i)

# Add swig wrapper for the library
FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

# Find python
IF ((NOT DEFINED ENV{PYTHON_INCLUDE_PATH}) OR (NOT DEFINED ENV{PYTHON_LIBRARIES}))
    FIND_PACKAGE(PythonLibs)
ELSE ((NOT DEFINED ENV{PYTHON_INCLUDE_PATH}) OR (NOT DEFINED ENV{PYTHON_LIBRARIES}))
    SET(PYTHON_INCLUDE_PATH $ENV{PYTHON_INCLUDE_PATH})
    SET(PYTHON_LIBRARIES $ENV{PYTHON_LIBRARIES})
ENDIF ((NOT DEFINED ENV{PYTHON_INCLUDE_PATH}) OR (NOT DEFINED ENV{PYTHON_LIBRARIES}))
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

# Find numpy
FIND_PACKAGE("NumPy")
INCLUDE_DIRECTORIES(${NUMPY_INCLUDE_DIRS})

# Add eigen wrapper
INCLUDE_DIRECTORIES(${EIGEN_WRAPPER_PATH})

# Generate wrapper for python
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CMAKE_SWIG_FLAGS "-includeall")
SWIG_ADD_MODULE(PyWireInflator2D python ${SWG_FILES})
SWIG_LINK_LIBRARIES(PyWireInflator2D ${PYTHON_LIBRARIES} WireInflator2D)

