sudo: required
dist: trusty
language: cpp
cache: ccache
matrix:
  include:
  - os: linux
    compiler: gcc-7
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-7
        - g++-7
        - libmpfr-dev
        - libboost-filesystem-dev
        - libboost-program-options-dev
        - libboost-system-dev
        - libboost-thread-dev
        - libsuitesparse-dev
        - xorg-dev
        - libglu1-mesa-dev
    env:
    - MATRIX_EVAL="export CC=gcc-7 && CXX=g++-7 && CONFIG=Debug"

  - os: linux
    compiler: gcc-7
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-7
        - g++-7
        - libmpfr-dev
        - libboost-filesystem-dev
        - libboost-program-options-dev
        - libboost-system-dev
        - libboost-thread-dev
        - libsuitesparse-dev
        - xorg-dev
        - libglu1-mesa-dev
    env:
    - MATRIX_EVAL="export CC=gcc-7 && CXX=g++-7 && CONFIG=Release"

  - os: osx
    osx_image: xcode10.1
    compiler: clang
    env:
    - MATRIX_EVAL="export CONFIG=Debug"

  - os: osx
    osx_image: xcode10.1
    compiler: clang
    env:
    - MATRIX_EVAL="export CONFIG=Release"

install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install suite-sparse ccache; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi
- eval "${MATRIX_EVAL}"
- ccache --max-size=5.0G
- ccache -V && ccache --show-stats && ccache --zero-stats

script:
- mkdir build
- cd build
- cmake -DCMAKE_BUILD_TYPE=$CONFIG -DMICRO_COPY_HEADERS=ON -DMICRO_WITH_CERES=OFF ..
- make -j2
- if [[ "$CONFIG" == "Release" ]]; then make test; fi
- ccache --show-stats
